services:

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: dev_blog
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d dev_blog" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  auth:
    build:
      context: .
      dockerfile: cmd/auth/Dockerfile
    environment:
      - AUTH_CONFIG_PATH=./configs/auth.yaml
      - DB_DSN=postgres://user:password@postgres:5432/dev_blog?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"

  articles:
    build:
      context: .
      dockerfile: cmd/articles/Dockerfile
    environment:
      - ARTICLES_CONFIG_PATH=./configs/articles.yaml
      - DB_DSN=postgres://user:password@postgres:5432/dev_blog?sslmode=disable

    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"

  notify:
    build:
      context: .
      dockerfile: cmd/notify/Dockerfile
    environment:
      - NOTIFY_CONFIG_PATH=./configs/notify.yaml
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  postgres_data: